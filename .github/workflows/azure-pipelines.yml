name: Deploy EduPlan App to Azure

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: eduplan
  NODE_VERSION: '20.x'

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    # Build Frontend
    - name: Install frontend dependencies
      run: npm ci
      working-directory: frontend

    - name: Build frontend
      run: npm run build
      working-directory: frontend

    # Install Backend Dependencies
    - name: Install backend dependencies
      run: npm ci --only=production
      working-directory: backend

    # Prepare Combined Deployment Package
    - name: Prepare deployment package
      run: |
        echo "Creating combined deployment package..."
        mkdir -p deploy
        
        # Copy backend files
        echo "Copying backend files..."
        cp -r backend/src deploy/
        cp -r backend/public deploy/
        cp -r backend/migrations deploy/
        cp -r backend/config deploy/
        cp backend/package.json deploy/
        cp backend/package-lock.json deploy/
        
        # Copy frontend build files to backend's public directory
        echo "Copying frontend build files to public directory..."
        mkdir -p deploy/public/frontend
        cp -r frontend/dist/* deploy/public/frontend/
        
        echo "Deployment package prepared successfully"

    # Create web.config file
    - name: Create web.config
      run: |
        cat > deploy/web.config << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="src/server.js" verb="*" modules="iisnode" />
    </handlers>
    <rewrite>
      <rules>
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^src/server.js\/debug[\/]?" />
        </rule>
        <rule name="API Routes" stopProcessing="true">
          <match url="^api/(.*)" />
          <action type="Rewrite" url="src/server.js" />
        </rule>
        <rule name="Static Files" stopProcessing="true">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" />
          </conditions>
          <action type="None" />
        </rule>
        <rule name="Frontend Routes" stopProcessing="true">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
            <add input="{REQUEST_URI}" pattern="^/api/" negate="True" />
          </conditions>
          <action type="Rewrite" url="/frontend/index.html" />
        </rule>
      </rules>
    </rewrite>
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>
    <httpErrors existingResponse="PassThrough" />
  </system.webServer>
</configuration>
EOF

    # Create startup command file
    - name: Create startup command
      run: echo 'node src/server.js' > deploy/startup.txt

    # Create deployment package
    - name: Create deployment package
      run: |
        cd deploy
        zip -r ../eduplan-app.zip .
        cd ..

    # Deploy to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./eduplan-app.zip